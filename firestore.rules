rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/Admin/$(request.auth.uid));
    }

    // Allow access to Admin collection for initial setup
    match /Admin/{adminId} {
      allow read: if request.auth != null;
      // Allow write if it's their own document and either they're the first admin or already an admin
      allow write: if request.auth != null && 
                  adminId == request.auth.uid && 
                  (getAfter(/databases/$(database)/documents/Admin/$(request.auth.uid)).data.role == 'admin' || 
                   !exists(/databases/$(database)/documents/Admin/__any__));
    }

    // Allow read access to all destinations
    match /destinations/{destinationId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User profiles collection (includes achievements)
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    

    
    // User bookmarks rules
    match /userBookmarks/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && 
                   (request.auth.uid == userId && 
                   request.resource.data.userId == request.auth.uid || isAdmin());
      allow update: if request.auth != null && 
                   (request.auth.uid == userId && 
                   request.resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    
    // Photos collection rules
    match /photos/{photoId} {
      allow read: if request.auth != null && 
                 (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if request.auth != null && 
                   (request.resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if request.auth != null && 
                   (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Activities collection rules
    match /activities/{activityId} {
      allow read: if request.auth != null && 
                 (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if request.auth != null && 
                   (request.resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Travel map collection rules
    match /travel_map/{locationId} {
      allow read: if request.auth != null &&
        (request.auth.uid == resource.data.userId || isAdmin());
      allow create, update, delete: if request.auth.uid != null &&
        (request.auth.uid == resource.data.userId || isAdmin());
    }
  }
}
