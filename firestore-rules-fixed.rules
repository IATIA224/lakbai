rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/Admin/$(request.auth.uid));
    }

    match /Admin/{adminId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
        && adminId == request.auth.uid
        && (
          getAfter(/databases/$(database)/documents/Admin/$(request.auth.uid)).data.role == 'admin'
          || !exists(/databases/$(database)/documents/Admin/__any__)
        );
    }

    match /destinations/{destinationId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /users/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    match /userBookmarks/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && ((request.auth.uid == userId && request.resource.data.userId == request.auth.uid) || isAdmin());
      allow update: if request.auth != null && ((request.auth.uid == userId && request.resource.data.userId == request.auth.uid) || isAdmin());
      allow delete: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    match /photos/{photoId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if request.auth != null && (request.resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
    }

    match /activities/{activityId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if request.auth != null && (request.resource.data.userId == request.auth.uid || isAdmin());
    }

    match /travel_map/{locationId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin());
      allow create, update, delete: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin());
    }

    match /community/{postId} {
      allow read: if
        (resource.data.visibility == "Public")
        || (request.auth != null && (request.auth.uid == resource.data.authorId || isAdmin()))
        || (request.auth != null
            && resource.data.visibility == "Friends"
            && resource.data.allowedUids is list
            && request.auth.uid in resource.data.allowedUids);

      allow create: if request.auth != null
        && request.resource.data.authorId == request.auth.uid
        && request.resource.data.visibility in ["Public", "Friends", "Only Me"]
        && request.resource.data.title is string
        && request.resource.data.details is string
        && request.resource.data.createdAt is timestamp
        && (
          !("images" in request.resource.data)
          || (request.resource.data.images is list
              && request.resource.data.images.size() <= 12
              && request.resource.data.images[0] is string)
        )
        && (
          request.resource.data.visibility != "Friends"
          || (request.resource.data.allowedUids is list)
        );

      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.authorId || isAdmin());
    }
  }
}